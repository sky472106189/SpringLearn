<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的ioc-->
    <bean id="accountService" class="com.myself.service.impl.AccountServiceImpl"></bean>
    <bean id="logger" class="com.myself.utils.Logger"></bean>

    <!-- spring中基于xml的aop配置步骤
        1、把通知Bean也交给spring处理
        2、使用aop:config标签表明开始AOP配置
                id属性：给切面提供一个唯一标识
                ref属性：指定内部通知类bean的Id
        3、在aop:aspect标签内使用对应标签来配置通知的类型
                我们现在的目的是让printLog方法在切入点之前通知，所以是前置通知
                aop:before:表示配置前置通知
                     method属性：用于指定Logger类中哪个方法是前置通知
                     pointcut属性：用于指定切入点表达式(execution)，该表达式的含义是对哪些方法进行增强

                 切入点表达式语法格式：
                    execution(访问修饰符 返回值 包名.包名...类名.方法名(参数列表))
                    标准写法：
                        execution(public void com.myself.service.impl.AccountServiceImpl.saveAccount())
                    注意：
                        1.访问修饰符可以省略;
                            (void com.myself.service.impl.AccountServiceImpl.saveAccount())
                        2.返回值可以使用通配符,表示返回任意值;
                            (* com.myself.service.impl.AccountServiceImpl.saveAccount())
                        3.包名可以使用通配符,表示任意包,但是有几级包,就需要写几个
                            (* *.*.*.*.AccountServiceImpl.saveAccount())
                        4.包名可以使用".."表示当前包及其子包
                            (* *..AccountServiceImpl.saveAccount())
                        5.类名和方法名都可以使用通配符
                            (* *..*.saveAccount())  类名用通配符
                            (* *..*.*())            方法名用通配符
                        6.参数列表：
                            可以直接写数据类型
                                基本类型直接写名称  int
                                引用类型写包名.类名 java.lang.Spring
                            (* *..*.*(int))
                            可以使用通配符表示任意类型,但是必须有参数
                            (* *..*.*(*))
                            可以使用".."表示任意类型,但是必须有参数
                            (* *..*.*(..))
                    全通配写法：
                        execution(* *..*.*(..))

                    实际开发常用写法：
                        切到业务层实现类下的所有方法
                        execution(* com.myself.service.impl.*.*(..))
                    -->

    <!--配置AOP-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="beforeAdvice" ref="logger">
            <!--配置通知类型，并且建立通知方法和切入点方法的关联-->
            <aop:before method="printLog" pointcut="execution(* *..*.*(..))"></aop:before>
                        <!--pointcut="execution(public void com.myself.service.impl.AccountServiceImpl.saveAccount())"></aop:before>-->
        </aop:aspect>
    </aop:config>
</beans>